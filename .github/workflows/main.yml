name: Deploy to Databricks 

on: 
  push: 
    branches: 
      - main 

jobs: 
  deploy_dev: 
    runs-on: ubuntu-latest 

    steps: 
    - name: Checkout code 
      uses: actions/checkout@v2 

    - name: Install Databricks CLI and dependencies 
      run: | 
        pip install databricks-cli 
        pip install urllib3==1.26.6 chardet==3.0.4 

    - name: Configure Databricks CLI 
      env: 
        DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }} 
        DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }} 
      run: | 
        cat <<EOF | databricks configure --token 
        $DATABRICKS_HOST 
        $DATABRICKS_TOKEN 
        EOF 

    - name: Validate Databricks CLI Configuration 
      run: databricks workspace list 
      
    - name: Load dev environment variables
      id: load-env
      run: |
          echo "CONTAINER_NAME=$(cat .github/environments/dev.yml | grep CONTAINER_NAME | cut -d ' ' -f 2-)" >> $GITHUB_ENV
          echo "STORAGE_ACCOUNT_NAME=$(cat .github/environments/dev.yml | grep STORAGE_ACCOUNT_NAME | cut -d ' ' -f 2-)" >> $GITHUB_ENV

    - name: Replace tokens in notebooks
      run: |
         find release -type f -name "*.py" -exec sed -i 's/{CONTAINER_NAME}/'"$CONTAINER_NAME"'/g' {} +
         find release -type f -name "*.py" -exec sed -i 's/{STORAGE_ACCOUNT_NAME}/'"$STORAGE_ACCOUNT_NAME"'/g' {} +

    - name: Sync to Databricks 
      run: databricks workspace import_dir --overwrite release /Workspace/Users/kalpesh.azure.subscription@gmail.com/release 

  deploy_prod: 
    runs-on: ubuntu-latest 
    needs: deploy_dev 

    steps: 
    - name: Checkout code 
      uses: actions/checkout@v2 

    - name: Install Databricks CLI and dependencies 
      run: | 
        pip install databricks-cli 
        pip install urllib3==1.26.6 chardet==3.0.4 

    - name: Configure Databricks CLI 
      env: 
        DATABRICKS_HOST: ${{ secrets.PROD_DATABRICKS_HOST }} 
        DATABRICKS_TOKEN: ${{ secrets.PROD_DATABRICKS_TOKEN }} 
      run: | 
        cat <<EOF | databricks configure --token 
        $DATABRICKS_HOST 
        $DATABRICKS_TOKEN 
        EOF 

    - name: Validate Databricks CLI Configuration for Production 
      run: databricks workspace list 

    - name: Load prod environment variables
      id: load-env
      run: |
          echo "CONTAINER_NAME=$(cat .github/environments/prod.yml | grep CONTAINER_NAME | cut -d ' ' -f 2-)" >> $GITHUB_ENV
          echo "STORAGE_ACCOUNT_NAME=$(cat .github/environments/prod.yml | grep STORAGE_ACCOUNT_NAME | cut -d ' ' -f 2-)" >> $GITHUB_ENV

    - name: Replace tokens in notebooks
      run: |
          find release -type f -name "*.py" -exec sed -i 's/{CONTAINER_NAME}/'"$CONTAINER_NAME"'/g' {} +
          find release -type f -name "*.py" -exec sed -i 's/{STORAGE_ACCOUNT_NAME}/'"$STORAGE_ACCOUNT_NAME"'/g' {} +


    - name: Sync to Databricks Production 
      run: databricks workspace import_dir --overwrite release /Workspace/Users/kalpesh.azure.subscription@gmail.com/prod_release
